# Generated by Django 5.2.4 on 2025-08-04 08:05

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('RELOGIN_NEEDED', 'Relogin Needed'), ('IN_USE', 'In Use')], default='ACTIVE', max_length=20)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CrawlerSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="給這個爬蟲程式一個好記的名字，例如 'C++ Memory Eater v1'", max_length=100, unique=True)),
                ('language', models.CharField(help_text="這個程式碼的語言，例如 'C++'", max_length=50)),
                ('code', models.TextField(help_text='完整的爬蟲原始碼')),
                ('description', models.TextField(blank=True, help_text='描述這個版本的特點或適用場景')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('SUCCESS', 'Success'), ('FAILURE', 'Failure')], default='PENDING', max_length=20)),
                ('progress', models.IntegerField(default=0)),
                ('result', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oj_display_id', models.CharField(db_index=True, help_text='會在 URL 中使用的 ID，例如 PR113-2-12', max_length=50, unique=True)),
                ('oj_submit_id', models.IntegerField(help_text='發送繳交請求時會用到的 ID，例如 1231', unique=True)),
                ('title', models.CharField(max_length=255)),
                ('allowed_languages', models.JSONField(default=list, help_text="例如 ['C++', 'Python', 'Java']")),
            ],
        ),
        migrations.CreateModel(
            name='CreateAccountsTask',
            fields=[
                ('task_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crawler.task')),
                ('quantity', models.PositiveIntegerField()),
            ],
            bases=('crawler.task',),
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_cases', to='crawler.problem')),
            ],
        ),
        migrations.CreateModel(
            name='CrawlTask',
            fields=[
                ('task_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='crawler.task')),
                ('crawler_source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crawler.crawlersource')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.problem')),
            ],
            bases=('crawler.task',),
        ),
    ]
