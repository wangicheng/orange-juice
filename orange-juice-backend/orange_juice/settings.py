"""
Django settings for orange_juice project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG') == 'True'

ALLOWED_HOSTS_str = os.environ.get('ALLOWED_HOSTS', 'localhost,127.0.0.1')
ALLOWED_HOSTS = [host.strip() for host in ALLOWED_HOSTS_str.split(',') if host.strip()]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crawler'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'orange_juice.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'orange_juice.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRES_DB'),
        'USER': os.environ.get('POSTGRES_USER'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
        'HOST': os.environ.get('POSTGRES_HOST'),
        'PORT': os.environ.get('POSTGRES_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- 在檔案的末尾，加入你自己的設定 ---

# CORS 設定
# 允許 React 開發伺服器來源
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",
]
# 允許前端在跨域請求中攜帶 cookie (對於 session 認證是必要的)
CORS_ALLOW_CREDENTIALS = True

# 帳號創建任務相關設定
MAX_ACCOUNT_CREATION_FAILURES = 50
DEFAULT_OJ_PASSWORD = os.environ.get('DEFAULT_OJ_PASSWORD')

# 測資爬取任務相關設定
ACCOUNTS_PER_CRAWL_TASK = 50 # 每個爬取任務需要分配 50 個帳號

OJ_BASE_URL = 'http://134.208.3.66/'

CNN_MODEL_PATH = BASE_DIR / "assets" / "cnn_models" / "captcha_v1.pth"

# --- Logging Configuration ---

# 定義日誌檔案的路徑
LOGS_DIR = BASE_DIR / "logs"
os.makedirs(LOGS_DIR, exist_ok=True) # 確保 logs 資料夾存在

LOGGING = {
    # 'version' 是必須的，目前固定為 1
    'version': 1,
    
    # 'disable_existing_loggers' 設為 False，可以保留 Django 預設的日誌記錄器
    'disable_existing_loggers': False,

    # 'formatters'：定義日誌訊息的格式
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} - {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },

    # 'handlers'：定義日誌訊息要如何被處理 (例如：輸出到哪裡)
    'handlers': {
        # 處理器1：輸出到控制台 (Console)
        'console': {
            'level': 'DEBUG', # 此處理器處理 DEBUG 及以上等級的日誌
            'class': 'logging.StreamHandler',
            'formatter': 'simple', # 使用上面定義的 'simple' 格式
        },
        # 處理器2：輸出到檔案，並自動輪轉
        'file': {
            'level': 'INFO', # 此處理器處理 INFO 及以上等級的日誌
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOGS_DIR, 'app.log'), # 日誌檔案路徑
            'maxBytes': 1024 * 1024 * 5,  # 5 MB，檔案大小超過 5MB 就會輪轉
            'backupCount': 5, # 保留最近的 5 個備份檔案
            'formatter': 'verbose', # 使用上面定義的 'verbose' 格式
        },
    },

    # 'loggers'：日誌記錄器的配置
    'loggers': {
        # Django 自身的日誌記錄器
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO', # 只記錄 INFO 等級以上的 Django 內部日誌
            'propagate': False, # 不將日誌訊息傳遞給父記錄器
        },
        # 我們自己 App 的日誌記錄器
        'crawler': { 
            'handlers': ['console', 'file'],
            'level': 'DEBUG', # 記錄 DEBUG 及以上的所有等級，方便開發
            'propagate': False,
        },
    },

    # 'root' 記錄器：處理所有未被 'loggers' 中明確指定的日誌
    'root': {
        'handlers': ['console', 'file'],
        'level': 'WARNING', # 預設只處理 WARNING 及以上的日誌
    }
}

# Celery Configuration
CELERY_BROKER_URL = os.environ.get('CELERY_BROKER_URL')
CELERY_RESULT_BACKEND = os.environ.get('CELERY_RESULT_BACKEND')
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'